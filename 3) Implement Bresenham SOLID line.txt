3 Implement Bresenham line drawing algorithm to draw Solid line. Divide the screen in four quadrants with center as (0, 0). The line should work for all the slopes


#include<GL/freeglut.h>
#include<GL/gl.h>
#include<iostream>
#include<math.h>
using namespace std;

void init(){
glClearColor(0,0,0,1);
glColor3f(0,1,0);
glPointSize(2.0);
glMatrixMode(GL_PROJECTION);
gluOrtho2D(-450,450,-250,250);
}

void dda(){
int x0=-20,y0=-20,x1=300,y1=300;
int dx=abs(x1-x0);
int dy=abs(y1-y0);
int steps=dx>dy ? dx:dy;
float xinc=dx/(float)steps;
float yinc=dy/(float)steps;
int x=x0;
int y=y0;
glBegin(GL_POINTS);
for(int i=0;i<steps;i++){
   glVertex2i(x,y);
   x=x+xinc;
   y=y+yinc;
}
glEnd();
glFlush();
}

int main(int argc,char** argv){
  glutInit(&argc,argv);
  glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
  glutInitWindowSize(900,500);
  glutInitWindowPosition(0,0);
  int winid=glutCreateWindow("DDA Algorithm");
  glBegin(GL_LINES);
  glColor3f(1,0,0);
  glVertex2i(-1.0f,0.0f);
  glVertex2i(1.0f,0.0f);
  glVertex2i(0.0f,-1.0f);
  glVertex2i(0.0f,1.0f);
  glEnd();
  glFlush();
  init();
  glutDisplayFunc(dda);
  glutMainLoop();
  return 0;
}
